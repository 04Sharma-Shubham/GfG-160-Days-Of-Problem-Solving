📅 Day 2 - GFG 160 Days of Problem Solving

🧠 Problem: Move All Zeros to the End

Difficulty: EasyTopic: Arrays

📝 Problem Statement

Given an array of integers, move all the zeros to the end while maintaining the relative order of the non-zero elements.

🔍 Example

Input: arr[] = {0, 1, 0, 3, 12}  
Output: 1 3 12 0 0

Input: arr[] = {1, 2, 0, 4, 0}  
Output: 1 2 4 0 0

🚀 Approach

Use a pointer zero to keep track of the index to place non-zero elements.

Traverse the array:

If the element is not zero, swap it with the value at zero index.

Increment the zero index.

Zeros will automatically shift to the end.

✅ Java Solution

public class MoveZerosToEnd {
    void pushZerosToEnd(int[] arr) {
        int zero = 0;
        int n = arr.length;
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] != 0) {
                int temp = arr[i];
                arr[i] = arr[zero];
                arr[zero] = temp;
                zero++;
            }
        }
    }

    public static void main(String[] args) {
        MoveZerosToEnd obj = new MoveZerosToEnd();
        int[] arr = {0, 1, 0, 3, 12};
        obj.pushZerosToEnd(arr);
        System.out.print("Output: ");
        for (int num : arr) {
            System.out.print(num + " ");
        }
    }
}

🧪 Output

Output: 1 3 12 0 0

📚 Tags

#Arrays #GFG #Java #ZeroToEnd #Beginner

🔁 Try solving it before checking the code! Stay consistent and keep pushing forward 💪

📁 Path: /Day2/MoveZerosToEnd.java

